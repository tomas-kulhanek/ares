name: "PHP Composer"

on: [push, pull_request]

env:
  extensions: "json"
  cache-version: "1"
  composer-version: "v1"
  composer-install: "composer install --no-interaction --no-progress --no-suggest"

jobs:
  build:
    name: "Static analysis"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      matrix:
        php-version: [ "7.4" ]
        operating-system: [ "ubuntu-20.04" ]
      fail-fast: false

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Setup PHP cache environment"
        id: "extcache"
        uses: "shivammathur/cache-extensions@v1"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.extensions }}"
          key: "${{ env.cache-version }}"

      - name: "Cache PHP extensions"
        uses: "actions/cache@v2"
        with:
          path: "${{ steps.extcache.outputs.dir }}"
          key: "${{ steps.extcache.outputs.key }}"
          restore-keys: "${{ steps.extcache.outputs.key }}"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.extensions }}"
          tools: "composer:${{ env.composer-version }} "

      - name: "Setup problem matchers for PHP"
        run: 'echo "::add-matcher::${{ runner.tool_cache }}/php.json"'

      - name: "Get Composer cache directory"
        id: "composercache"
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'

      - name: "Cache PHP dependencies"
        uses: "actions/cache@v2"
        with:
          path: "${{ steps.composercache.outputs.dir }}"
          key: "${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "${{ runner.os }}-composer-"

      - name: "Install dependencies"
        run: "${{ env.composer-install }}"

      - name: "PHPStan"
        run: vendor/bin/phpstan analyse -c phpstan.neon

      - name: "Lint"
        run: vendor/bin/linter src

      - name: "Codesniffer"
        run: vendor/bin/codesniffer src